{"version":3,"file":"component---src-pages-hankyeolk-js-5137b7c9106f6de1c40c.js","mappings":"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","sources":["webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://hankyeolk-dev-blog/./src/components/SlideSection.jsx","webpack://hankyeolk-dev-blog/./node_modules/framer-motion/dist/es/utils/use-in-view.mjs","webpack://hankyeolk-dev-blog/./src/pages/hankyeolk.js"],"sourcesContent":["const noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.18\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { invariant } from '../../utils/errors.mjs';\nimport { setValues } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst thresholds = {\n    any: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"any\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.18\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.18 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { useAnimation, useInView, motion } from 'framer-motion';\nimport { useEffect, useRef } from 'react';\nimport React from 'react';\n\nconst sectionVariant = {\n  visible: { opacity: 1, scale: 1, transition: { duration: 1 } },\n  hidden: { opacity: 0, scale: 0 }\n};\n\nexport default function SlideSection({ children }) {\n  const control = useAnimation();\n  const ref = useRef(null);\n  const isInView = useInView(ref);\n\n  useEffect(() => {\n    if (isInView) {\n      control.start('visible');\n    } else {\n      control.start('hidden');\n    }\n  }, [isInView, control]);\n\n  return (\n    <motion.section\n      className='w-full flex items-center justify-center mb-3'\n      ref={ref}\n      variants={sectionVariant}\n      initial='hidden'\n      animate={control}>\n      {children}\n    </motion.section>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount: amount === \"some\" ? \"any\" : amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once]);\n    return isInView;\n}\n\nexport { useInView };\n","import { graphql } from 'gatsby';\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport Seo from '../components/Seo';\nimport Layout from '../layout';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport SlideSection from '../components/SlideSection';\n\nconst Hankyeolk = ({ data }) => {\n  const { name, enName } = data.site.siteMetadata.author;\n\n  return (\n    <main className='block'>\n      <Header />\n      <Seo title={name} />\n      <section className='hankyeolk-container min-h-[1250px]'>\n        <header id='hankyeolk-header' className='hankyeolk-header'>\n          <img\n            src={'../../hk-icon-white.png'}\n            alt='icon'\n            className='hankyeolk-icon'\n          />\n          <h1 className='hankyeolk-name'>\n            {name} | {enName}\n          </h1>\n          <p className='hankyeolk-descript'>\n            늘 최신으로 업데이트중인 PM입니다.\n          </p>\n          <p className='hankyeolk-descript-btn'>\n            <b>{name}</b>에 대해서 조금 더 알아보기 😎\n          </p>\n        </header>\n        <SlideSection>\n          <div className='w-full h-96 border border-green-600'>\n            <ul>\n              <li>test</li>\n              <li>test</li>\n              <li>test</li>\n              <li>test</li>\n            </ul>\n          </div>\n        </SlideSection>\n        <SlideSection>\n          <div className='w-full h-96 border border-green-600'>\n            <ul>\n              <li>test2</li>\n              <li>test2</li>\n              <li>test2</li>\n              <li>test2</li>\n            </ul>\n          </div>\n        </SlideSection>\n        <SlideSection>\n          <div className='w-full h-96 border border-green-600'>\n            <ul>\n              <li>test2</li>\n              <li>test2</li>\n              <li>test2</li>\n              <li>test2</li>\n            </ul>\n          </div>\n        </SlideSection>\n        <SlideSection>\n          <div className='w-full h-96 border border-green-600'>\n            <ul>\n              <li>test2</li>\n              <li>test2</li>\n              <li>test2</li>\n              <li>test2</li>\n            </ul>\n          </div>\n        </SlideSection>\n      </section>\n      <Footer />\n    </main>\n  );\n};\n\nexport default Hankyeolk;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author {\n          name\n          enName\n        }\n      }\n    }\n  }\n`;\n"],"names":["noop","any","warning","invariant","isZeroValueString","v","test","isKeyframesTarget","Array","isArray","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","key","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","indexOf","push","length","cancel","index","splice","delete","process","i","has","createRenderStep","processStep","stepId","processFrame","Math","max","min","forEach","requestAnimationFrame","cancelFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","init","options","value","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","render","prev","current","scheduleVelocityCheck","change","velocityChange","getVelocity","renderRequest","velocityCheck","hasAnimated","isNaN","parseFloat","owner","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","set","setWithVelocity","jump","get","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","checkStringStartsWith","token","startsWith","isCSSVariableName","isCSSVariableToken","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","clamp","number","parse","transform","alpha","scale","default","isColorString","type","testProp","Boolean","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","undefined","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","info","matches","tokenised","replace","values","map","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","includes","parseComplexValue","createTransformer","source","numValues","output","convertNumbersToZero","complex","_a","_b","getAnimatableNone","parsed","transformer","maxDefaults","Set","applyDefaultFilter","name","slice","defaultValue","functionRegex","filter","functions","join","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariantFromProps","props","definition","custom","currentValues","currentVelocity","variants","resolveVariant","visualElement","getProps","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","resolved","transitionEnd","transition","target","makeTargetAnimatable","setVariants","variantLabels","reverse","variant","getVariant","variantChildren","child","getOriginFromTransition","from","transformPropOrder","transformProps","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","mix","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","mixImmediate","origin","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","state","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","next","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","e","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","element","keyframeOptions","animate","iterations","direction","animateStyle","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isMotionValue","isWillChangeMotionValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","animationState","getState","valueTarget","window","HandoffAppearAnimations","appearId","shouldReduceMotion","remove","all","animateVariant","getAnimation","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","animationControls","hasMounted","subscribers","subscribe","setValues","stopAnimation","mount","useConstant","ref","useRef","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","useAnimation","thresholds","inView","elementOrSelector","onStart","root","rootMargin","amount","elements","scope","selectorCache","querySelectorAll","resolveElements","activeIntersections","WeakMap","observer","IntersectionObserver","entries","entry","onEnd","isIntersecting","newOnEnd","unobserve","threshold","observe","disconnect","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","featureProps","exit","drag","focus","hover","tap","pan","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","updateFeatures","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","isForcedMotionValue","translateAlias","numTransforms","getValueAsType","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","resolveMotionValue","unwrappedValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","initIntersectionObserver","thresholdNames","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","once","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","onBlur","shallowCompare","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","DOMVisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","sectionVariant","visible","hidden","SlideSection","control","setInView","useState","useInView","section","className","enName","site","siteMetadata","author","Header","Seo","title","src","alt","Footer"],"sourceRoot":""}